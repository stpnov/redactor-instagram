(function($R)
{
    $R.add('plugin', 'instagram', {
        modals: {
            'instagram': '<form action="">'
                + '<div class="form-item">'
                + '<label>## instagram-label ##</label>'
                + '<input type="url" name="url"/>'
                + '</div>'
                + '</form>'
        },
        translations: {
            ru: {
                "instagram": "Instagram",
                "instagram-label": "Вставьте ссылку на instagram-пост"
            }
        },
        init: function(app)
        {
            // define app
            this.app = app;

            // define services
            this.lang = app.lang;
            this.component = app.component;
            this.toolbar = app.toolbar;
            this.insertion = app.insertion;
            this.inspector = app.inspector;
        },

        // messages
        onmodal: {
            instagram: {
                opened: function($modal, $form)
                {
                    $form.getField('url').focus();
                },
                insert: function($modal, $form)
                {
                    var data = $form.getData();
                    this._load(data);
                }
            }
        },
        oncontextbar: function(e, contextbar)
        {
            var data = this.inspector.parse(e.target)
            if (data.isComponentType('instagram'))
            {
                var node = data.getComponent();
                var buttons = {
                    "left": {
                        title: this.lang.get('align-left'),
                        api: 'plugin.instagram.left',
                        args: node
                    },
                    "center": {
                        title: this.lang.get('align-center'),
                        api: 'plugin.instagram.center',
                        args: node
                    },
                    "right": {
                        title: this.lang.get('align-right'),
                        api: 'plugin.instagram.right',
                        args: node
                    },
                    "remove": {
                        title: this.lang.get('delete'),
                        api: 'plugin.instagram.remove',
                        args: node
                    }
                };

                contextbar.set(e, node, buttons);
            }

        },
        remove: function(node)
        {
            this.component.remove(node);
        },
        left: function(node)
        {
            this._position('left', node);
        },
        center: function(node)
        {
            this._position('center', node);
        },
        right: function(node)
        {
            this._position('right', node);
        },
        _position: function(pos, node) {
            var $node = $R.dom(node);
            $node.css({
                'display': 'flex',
                'justify-content': pos
            });
            //$el.attr('rel', $el.attr('style'));
        },
        // public
        start: function()
        {
            // create the button data
            var data = {
                title: this.lang.get('instagram'),
                api: 'plugin.instagram.open'
            };

            // create the button
            var $button = this.toolbar.addButton('instagram', data);
            $button.setIcon('<i class="ti-instagram"></i>');
        },
        open: function()
        {
            var options = {
                title: this.lang.get('instagram'),
                width: '600px',
                name: 'instagram',
                handle: 'insert',
                commands: {
                    insert: { title: this.lang.get('insert') },
                    cancel: { title: this.lang.get('cancel') }
                }
            };

            this.app.api('module.modal.build', options);
        },

        // private
        _insert: function(data)
        {
            if (data.html) {
                var $instagram = this.component.create('instagram', data.html);
                this.insertion.insertHtml($instagram);
            }

        },
        _load: function (data) {

            this.app.api('module.modal.close');

            if (data.url.trim() === '') return;

            $.ajax({
                method: 'GET',
                url: 'https://api.instagram.com/oembed/?url=' + data.url,
                success: this._insert.bind(this)
            });
        }
    });
})(Redactor);
(function($R)
{
    $R.add('class', 'instagram.component', {
        mixins: ['dom', 'component'],
        init: function(app, el)
        {
            this.app = app;

            // init
            return (el && el.cmnt !== undefined) ? el : this._init(el);
        },

        // private
        _init: function(el)
        {
            if (typeof el !== 'undefined')
            {
                var $node = $R.dom(el);
                var $wrapper = $node.closest('figure');
                if ($wrapper.length !== 0)
                {
                    this.parse($wrapper);
                }
                else
                {
                    this.parse('<figure>');
                    this.append(el);
                }
            }
            else
            {
                this.parse('<figure>');
            }


            this._initWrapper();
        },
        _initWrapper: function()
        {
            this.addClass('redactor-component');
            this.attr({
                'data-redactor-type': 'instagram',
                'tabindex': '-1',
                'contenteditable': false
            });
        }
    });
})(Redactor);